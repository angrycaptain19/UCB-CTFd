var challenges
var attemptChallengeTraining
var solves
var score = 0
var link = ''
var file
var newDescription = ''



fetch('/api/v1/users/me/solves', { method: 'GET', credentials: 'same-origin', 
headers: {
    Accept: "application/json", 
    "Content-Type": "application/json",
    "CSRF-Token": init.csrfNonce
}})
.then(res => res.json())
.then(data => {
    // console.log(data.data)
    solves = data.data
})

fetch('/api/v1/challenges/training', { method: 'GET', credentials: 'same-origin', headers: 
    { 
        Accept: 'application/json', 
        'Accept-Encoding': 'gzip, deflate, br',
        'Content-Type': 'application/json',
    } })
    .then( res => res.json())
    .then( data => {
        challenges = data.data
        // console.log( challenges )

        var table = document.getElementById('accordionTraining')
        table.innerHTML = ''
        var di = ''
        
        challenges.forEach( challenge => {

            setTimeout(() => {}, 50)

            fetch(`/api/v1/challenges/${challenge.id}`, { method: 'GET', credentials: 'same-origin', 
            headers: {
                Accept: "application/json", 
                "Content-Type": "application/json",
                "CSRF-Token": init.csrfNonce
            }})
            .then(res => res.json())
            .then(data => {
                var datos = data.data
                console.log(datos)
    
                if ( datos.files.length > 0 ) {
                    file = datos.files[0]
                    document.getElementById(`${challenge.id}-file`).innerHTML = `<a href="${file}"> Descargar archivo </a> <br>`
                }

            })

            const solved = solves.some((solve) => { 
                if( solve.challenge_id === challenge.id ) {
                    score = score + solve.challenge.value
                    return true
                } else {
                    return false
                }
            })

            challengeLink(challenge)

            setTimeout(() => {}, 50)

            // console.log(`file ${file}`)

            

            di += solved ? `<div class="card bg-success">` : `<div class="card">` 
            di += `    <div class="card-header" id="heading-${challenge.id}">`
            di += `      <h2 class="mb-0">`
            di +=  solved ? `        <button class="btn btn-link text-white btn-block text-left" type="button" data-toggle="collapse" data-target="#collapse-${challenge.id}" aria-expanded="false" aria-controls="collapse-${challenge.id}">` : `        <button class="btn btn-link  btn-block text-left" type="button" data-toggle="collapse" data-target="#collapse-${challenge.id}" aria-expanded="false" aria-controls="collapse-${challenge.id}">`
            di += `          <div class="row justify-content-center" >`
            di += `            <div class="col" >`
            di += `              ${challenge.name} - <strong>${challenge.value} pts</strong>`
            di += `            </div>`
            di += `            <div class="col-md-auto" ></div>`
            di += `            <div class="col col-lg-3" >`
            di += `              <strong>${challenge.category}</strong>`
            di += `            </div>`
            di += `        </div>`
            di += `        </button>`
            di += `      </h2>`
            di += `    </div>`
            di += `    <div id="collapse-${challenge.id}" class="collapse" aria-labelledby="heading-${challenge.id}" data-parent="#accordionTraining">`
            di += `      <div class="card-body">`
            di += `        <ul class="nav nav-tabs">`
            di += `          <li class="nav-item">`
            di += `            <a class="nav-link active" href="#">Flag</a>`
            di += `          </li>`
            di += `        </ul>`
            di += `        <div class="tab-pane active" >`
            di += `          <div class="container p-4" >`
            di += newDescription.length > 0 ? `            <h4> ${newDescription} </h4> `: `            <h4> ${challenge.description} </h4> `
            di += link.length > 0 ? ` <a href=${link} target="_blank" > link </a>  <br>` : `<br>`
            di += `            <div id="${challenge.id}-file" >  </div> `
            di += `            <div class="input-group-sm mb-3 p-2 ">`
            di += `              <div class="input-group-prepend">`
            di += `                <button class="input btn btn-primary" type="button" onclick="submitFlag(${challenge.id})" >Subir</button>`
            di += `                <input id="flagTraining${challenge.id}" type="text" class="form-control" placeholder="UCB{xxx}" aria-label="Example text with button addon" aria-describedby="inputGroup-sizing-sm">`
            di += `              </div>`
            di += `            </div>`
            di += `          </div>`
            di += `        </div>`
            di += `      </div>`
            di += `    </div>`
            di += `</div>`
        })
        table.innerHTML += di

        document.getElementById('score').textContent = score.toString();
        
    })

window['submitFlag'] = (ChallengeID) => {
    var inp = document.getElementById(`flagTraining${ChallengeID}`).value
    var flag = {
        challenge_id: ChallengeID,
        submission: inp
    }

    fetch('/api/v1/challenges/training-attempt', 
    { 
        method: 'POST', 
        credentials: 'same-origin', 
        body: JSON.stringify(flag) , 
        headers: {
            Accept: "application/json", 
            "Content-Type": "application/json",
            "CSRF-Token": init.csrfNonce
        }
    })
    .then( res => res.json())
    .then( data => {
        console.log(data)
        location.reload()
    })
}

// esta funcion ve si nuestro reto tiene algun link de re direccion
function challengeLink(challenge) {
    console.log(challenge.description)

    var posHTTPincial = challenge.description.indexOf("http://")

    console.log( posHTTPincial )
    if( posHTTPincial > -1 ) {

        var posHTTPfinal = challenge.description.indexOf(")", posHTTPincial)

        link = challenge.description.substring(posHTTPincial, (posHTTPfinal) )
        newDescription = `${challenge.description.substring(0, (posHTTPincial - 7))}`
    } else {
        newDescription = ''
        link = ''
    }
}

